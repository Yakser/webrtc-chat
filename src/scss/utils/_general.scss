@use "colors";

*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

:root {
  @each $key, $value in colors.$colors {
    --color-#{$key} : #{$value};
    --color-#{$key}--rgb: #{colors.HexToRGB($value)};
  }
}


html {
  font-size: 50%;
  color-scheme: dark;
}


body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;

  font-family: "Inter", -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  font-size: 1.6rem;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  font-synthesis: none;
  font-optical-sizing: auto;

  scroll-behavior: smooth;
  color: colors.get(white);
}


main {
  overflow: hidden;
  padding: 0 2rem;
}

a {
  color: colors.get(blue);
}

code {
  line-height: 1.5;
  font-family: inherit;
}


::selection {
  //background-color: colors.get(blue, .5);
}


@media screen and (min-width: 500px) {
  html {
    font-size: 62.5%;
  }
}


